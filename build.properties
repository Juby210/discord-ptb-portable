# Portapps
#core.dir = vendor/github.com/portapps/portapps
core.dir = ../portapps

# App
app = discord-ptb
app.name = DiscordPTB
app.type = electron

# Portable app
papp.id = ${app}-portable
papp.guid = {0A7FE821-675B-4B75-ADFD-EEE26865A892}
papp.name = ${app.name} Portable
papp.desc = ${app.name} portable on Windows by Portapps
papp.url = https://github.com/portapps/${papp.id}
papp.folder = app

# Electron
#electron.executionstub =
electron.libfolder = lib/net45
#electron.userdata.search = app.setPath('userData', path.join(app.getPath('appData'), app.getName()))
#electron.userdata.replace = app.setPath('userData', process.execPath), '..', '..', 'data'))
electron.appasar.file = common/paths.js
electron.appasar.search = userDataPath = determineUserData(userDataRoot, buildInfo);
electron.appasar.replace = userDataPath = _path2.default.join(_path2.default.dirname(process.execPath), '..', '..', 'data');
electron.appasar.file2 = app_bootstrap/index.js
electron.appasar.search2 = var multiInstance = hasArgvFlag('--multi-instance');
electron.appasar.replace2 = var multiInstance = true;

# Official artifacts
atf.id = DiscordPTB
atf.ia32.filename = DiscordPTBSetup-ia32
atf.ia32.ext = .exe
atf.ia32.url = https://discordapp.com/api/download/ptb?platform=win
atf.ia32.assertextract = RELEASES
#atf.x64.filename =
#atf.x64.ext =
#atf.x64.url =
#atf.x64.assertextract =
